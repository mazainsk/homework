# п.1.1 и п.1.2 Функция с тремя параметрами, заданными по умолчанию, которая выводит значения этих параметров.
def print_params(a = 1, b = None, c = True):
    print(a, b, c)

# п.1.3. Проверка разных вариантов вызова функции:
print_params()                     # 1. без параметров
print_params(b=2)                  # 2. указание одного конкретного параметра
print_params('Строка', c=10)  # 3. использование двух параметров из трех возможных: один из них задается по имени,
#                                       второй - позиционно, при этом используется замена типа данных

# п.1.4. Проверка, работают ли вызовы print_params(b = 25) print_params(c = [1,2,3]):
print_params(b = 25)
print_params(c = [1,2,3])

# п.2.1. Список с тремя элементами разных типов:
values_list = ['Яблоко', True, 32]

# п.2.2. Словарь values_dict с тремя ключами, соответствующими параметрам функции print_params, и значениями
#        разных типов:
values_dict = {'a': 'Месяц', 'b': 10, 'c': ['Год', 2024]}

# п.2.3. Передача values_list и values_dict в функцию print_params, используя распаковку параметров (* для списка
#        и ** для словаря):
print_params(*values_list)
print_params(**values_dict)

# п.3.1. Список values_list_2 с двумя элементами разных типов:
values_list_2 = [False, 8]

# п.3.2. Проверка, работает ли print_params(*values_list_2, 42):
print_params(*values_list_2, 42) # да, работает: 2 параметра задаются распаковкой списка и один - явно